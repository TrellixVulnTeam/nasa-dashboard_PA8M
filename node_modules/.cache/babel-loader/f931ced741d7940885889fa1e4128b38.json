{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'Login',\n  props: {},\n\n  data() {\n    return {\n      form: {\n        username: '',\n        password: ''\n      },\n      type: 'password',\n      showError: false,\n      showPassword: false\n    };\n  },\n\n  computed: { ...mapGetters({\n      tokenError: \"StateTokenNotValid\"\n    }),\n\n    usernameValidation() {\n      return this.form.username.length > 4 && this.form.username.length < 13;\n    },\n\n    passwordValidation() {\n      return this.form.password.length > 6;\n    },\n\n    passwordValidationNumbers() {\n      return /\\d/.test(this.form.password);\n    },\n\n    passwordSpecial() {\n      return /[!@#$%^&*)(+=._-]/.test(this.form.password);\n    }\n\n  },\n  methods: { ...mapActions(['LogIn']),\n\n    async submit() {\n      try {\n        await this.LogIn(this.form);\n        this.$router.push('/');\n        this.showError = false;\n      } catch (error) {\n        console.log(\"Error while logging in\" + error.message);\n        this.showError = true;\n      }\n    },\n\n    togglePassword() {\n      if (this.showPassword) this.showPassword = false;else this.showPassword = true;\n      if (this.type === 'password') this.type = 'text';else if (this.type === 'text') this.type = 'password';\n    }\n\n  }\n};","map":{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AAEA,eAAA;EACA,IAAA,EAAA,OADA;EAEA,KAAA,EAAA,EAFA;;EAIA,IAAA,GAAA;IACA,OAAA;MACA,IAAA,EAAA;QACA,QAAA,EAAA,EADA;QAEA,QAAA,EAAA;MAFA,CADA;MAKA,IAAA,EAAA,UALA;MAMA,SAAA,EAAA,KANA;MAOA,YAAA,EAAA;IAPA,CAAA;EASA,CAdA;;EAeA,QAAA,EAAA,EACA,GAAA,UAAA,CAAA;MAAA,UAAA,EAAA;IAAA,CAAA,CADA;;IAEA,kBAAA,GAAA;MACA,OAAA,KAAA,IAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,IAAA,CAAA,QAAA,CAAA,MAAA,GAAA,EAAA;IACA,CAJA;;IAKA,kBAAA,GAAA;MACA,OAAA,KAAA,IAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA;IACA,CAPA;;IAQA,yBAAA,GAAA;MACA,OAAA,KAAA,IAAA,CAAA,KAAA,IAAA,CAAA,QAAA,CAAA;IACA,CAVA;;IAWA,eAAA,GAAA;MACA,OAAA,oBAAA,IAAA,CAAA,KAAA,IAAA,CAAA,QAAA,CAAA;IACA;;EAbA,CAfA;EA8BA,OAAA,EAAA,EACA,GAAA,UAAA,CAAA,CAAA,OAAA,CAAA,CADA;;IAEA,MAAA,MAAA,GAAA;MACA,IAAA;QACA,MAAA,KAAA,KAAA,CAAA,KAAA,IAAA,CAAA;QACA,KAAA,OAAA,CAAA,IAAA,CAAA,GAAA;QACA,KAAA,SAAA,GAAA,KAAA;MACA,CAJA,CAIA,OAAA,KAAA,EAAA;QACA,OAAA,CAAA,GAAA,CAAA,2BAAA,KAAA,CAAA,OAAA;QACA,KAAA,SAAA,GAAA,IAAA;MACA;IACA,CAXA;;IAYA,cAAA,GAAA;MACA,IAAA,KAAA,YAAA,EAAA,KAAA,YAAA,GAAA,KAAA,CAAA,KACA,KAAA,YAAA,GAAA,IAAA;MAEA,IAAA,KAAA,IAAA,KAAA,UAAA,EAAA,KAAA,IAAA,GAAA,MAAA,CAAA,KACA,IAAA,KAAA,IAAA,KAAA,MAAA,EAAA,KAAA,IAAA,GAAA,UAAA;IACA;;EAlBA;AA9BA,CAAA","sourcesContent":["<template>\n    <div class=\"login\">\n      <div class=\"left-half\">\n        <h1>Welcome!</h1>\n        <h2>Login to continue</h2>\n      </div>\n      <div class=\"right-half\">\n        <p>Please login with your personal data.</p>\n            <div>\n              <label class=\"sr-only\" for=\"inline-form-input-username\">Username</label>\n              <b-form inline @submit.prevent=\"submit\">\n                  <b-form-input\n                    id=\"inline-form-input-username\"\n                    class=\"mb-2 mr-sm-2 mb-sm-0\"\n                    placeholder=\"Username\"\n                    name=\"username\"\n                    v-model=\"form.username\"\n                  ></b-form-input>\n                  <b-form-invalid-feedback :state=\"usernameValidation\">\n                    <b-icon icon=\"exclamation-triangle\"></b-icon> Your username must be 5-12 characters long.\n                  </b-form-invalid-feedback>\n                  <b-form-valid-feedback :state=\"usernameValidation\">\n                    <b-icon-check></b-icon-check>Looks Good.\n                  </b-form-valid-feedback>\n                  <br>\n\n                  <label class=\"sr-only\" for=\"inline-form-input-username\">Password</label>\n                  <div @click=\"togglePassword\" class=\"eye-icon\">\n                    <b-icon-eye v-if=\"!showPassword\"></b-icon-eye>\n                    <b-icon-eye-slash v-if=\"showPassword\"></b-icon-eye-slash>\n                  </div>\n                  \n                  <b-form-input \n                    :type=\"this.type\" \n                    id=\"inline-form-input-password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    v-model=\"form.password\"\n                  >\n                  </b-form-input>\n                  <b-form-invalid-feedback :state=\"passwordValidation\">\n                    <b-icon icon=\"exclamation-triangle\"></b-icon>Your password must be at least 6 characters long.\n                  </b-form-invalid-feedback>\n                  <b-form-valid-feedback :state=\"passwordValidation\">\n                   <b-icon-check></b-icon-check> Looks Good.\n                  </b-form-valid-feedback>\n\n                  <b-form-invalid-feedback :state=\"passwordValidationNumbers\">\n                    <b-icon icon=\"exclamation-triangle\"></b-icon> Your password must contain numbers.\n                  </b-form-invalid-feedback>\n                  <b-form-valid-feedback :state=\"passwordValidationNumbers\">\n                  <b-icon-check></b-icon-check> Your password contains numbers.\n                  </b-form-valid-feedback>\n\n                  <b-form-invalid-feedback :state=\"passwordSpecial\">\n                    <b-icon icon=\"exclamation-triangle\"></b-icon>Your password must contain Special Characters.\n                  </b-form-invalid-feedback>\n                  <b-form-valid-feedback :state=\"passwordSpecial\">\n                  <b-icon-check></b-icon-check> Your password contains Special Characters.\n                  </b-form-valid-feedback>\n\n                  <button type=\"submit\" class=\"btn btn-primary space-medium\">Login</button>\n              </b-form>\n            </div>\n\n          <!-- Error Messages -->\n\n          <b-alert v-if=\"showError\" show variant=\"danger\">\n              <p class=\"error\">Username or Password incorrect!</p>\n          </b-alert>\n\n          <b-alert v-if=\"tokenError\" show variant=\"danger\">\n            <b-icon-exclamation font-scale=\"2\"></b-icon-exclamation>Check if your <b-icon-github></b-icon-github> <b>Token</b> is still valid.\n          </b-alert>\n      </div>\n\n    </div>\n</template>\n\n<script>\n  import { mapActions, mapGetters } from 'vuex'\n\nexport default {\n  name: 'Login',\n  props: {\n  }, \n  data() {\n    return {\n      form: {\n        username: '',\n        password: '',\n      },\n      type: 'password',\n      showError: false,\n      showPassword: false\n    }\n  },\n  computed: {\n    ...mapGetters({tokenError: \"StateTokenNotValid\"}),\n    usernameValidation() {\n      return this.form.username.length > 4 && this.form.username.length < 13\n    },\n    passwordValidation() {\n      return this.form.password.length > 6\n    },\n    passwordValidationNumbers() {\n      return /\\d/.test(this.form.password);\n    },\n    passwordSpecial() {\n      return /[!@#$%^&*)(+=._-]/.test(this.form.password);\n    },\n  },\n  methods: {\n    ...mapActions(['LogIn']),\n    async submit() {\n      try {\n        await this.LogIn(this.form);\n        this.$router.push('/')\n        this.showError = false\n      } catch (error) {\n        console.log(\"Error while logging in\" + error.message)\n        this.showError = true\n      }\n    },\n    togglePassword() {\n      if(this.showPassword) this.showPassword = false;\n      else this.showPassword = true;\n\n      if(this.type === 'password') this.type = 'text';\n      else if(this.type === 'text') this.type = 'password';\n    },\n  }, \n}\n</script>\n\n\n<style scoped lang=\"scss\">\n  h1 {\n    color: black;\n  }\n  .navbar {\n    background: black;\n    color: white;\n  }\n  a {\n    color: white !important;\n  }\n  .nav-link {\n    color: white;\n    \n    &:hover {\n      color: white;\n    }\n  }\n  .login {\n      display: flex;\n      place-items: center;\n      margin: 5% 25% 10% 25%;\n      padding: 2.5% 5%;\n      border-radius: 25px;\n      border: 4px solid white;\n      background-color: white;\n      color: black;\n      overflow: hidden;\n  }\n\n  .left-half {\n    width: 50%;\n    margin-right: 2rem;\n  }\n\n  .right-half {\n    width: minmax(350px ,50%);\n    text-align: left;\n  }\n  b-input-group {\n    margin-top: 15px;\n  }\n  .login-button {\n    margin: 2rem;\n  }\n\n  .eye-icon {\n    margin: auto;\n    margin-left: 15px;\n    display: inline-block;\n    cursor: pointer;\n  }\n\n  .error {\n    margin: 0 !important;\n  }\n\n  label {\n    font-weight: 500;\n  }\n\n  input {\n    border-radius: 15px;\n  }\n\n  form {\n    width: 350px;\n  }\n\n  @media screen and (max-width: 400px) {\n    .login{\n      padding: 0;\n      margin: 0;\n    }\n  }\n</style>\n"],"sourceRoot":"src/components/user"},"metadata":{},"sourceType":"module"}