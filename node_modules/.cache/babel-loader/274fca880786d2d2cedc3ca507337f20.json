{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  name: 'Location',\n\n  data() {\n    return {\n      location: {},\n      films: [],\n      residents: {}\n    };\n  },\n\n  async created() {\n    let locationID = this.$route.params.id;\n    console.log(locationID);\n    await this.GetLocationData(locationID); // this.GetFilms();\n  },\n\n  computed: {\n    filteredPeople() {\n      return this.people.filter(person => {\n        return person.name.toLowerCase().indexOf(this.searchName.toLowerCase()) > -1;\n      });\n    }\n\n  },\n  watch: {\n    person() {\n      this.GetFilms();\n      this.GetSpecies();\n    }\n\n  },\n  methods: {\n    GetLocationData(locationID) {\n      axios.get(`https://ghibliapi.herokuapp.com/people/${locationID}`).then(resp => {\n        this.location = resp.data;\n      });\n    },\n\n    GetFilms() {\n      console.log(this.person.name);\n\n      if (this.person.films) {\n        for (let index = 0; index < this.person.films.length; index++) {\n          axios.get(this.person.films[index]).then(resp => {\n            this.films.push(resp.data);\n          });\n        }\n      }\n    },\n\n    GetSpecies() {\n      axios.get(this.person.species).then(resp => {\n        this.species = resp.data;\n      });\n    }\n\n  }\n};","map":{"version":3,"sources":["Location.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;EACA,IAAA,EAAA,UADA;;EAEA,IAAA,GAAA;IACA,OAAA;MACA,QAAA,EAAA,EADA;MAEA,KAAA,EAAA,EAFA;MAGA,SAAA,EAAA;IAHA,CAAA;EAKA,CARA;;EASA,MAAA,OAAA,GAAA;IACA,IAAA,UAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;IAEA,OAAA,CAAA,GAAA,CAAA,UAAA;IACA,MAAA,KAAA,eAAA,CAAA,UAAA,CAAA,CAJA,CAKA;EACA,CAfA;;EAgBA,QAAA,EAAA;IACA,cAAA,GAAA;MACA,OAAA,KAAA,MAAA,CAAA,MAAA,CAAA,MAAA,IAAA;QACA,OAAA,MAAA,CAAA,IAAA,CAAA,WAAA,GAAA,OAAA,CAAA,KAAA,UAAA,CAAA,WAAA,EAAA,IAAA,CAAA,CAAA;MACA,CAFA,CAAA;IAGA;;EALA,CAhBA;EAuBA,KAAA,EAAA;IACA,MAAA,GAAA;MACA,KAAA,QAAA;MACA,KAAA,UAAA;IACA;;EAJA,CAvBA;EA6BA,OAAA,EAAA;IACA,eAAA,CAAA,UAAA,EAAA;MACA,KAAA,CAAA,GAAA,CAAA,0CAAA,UAAA,EAAA,EAAA,IAAA,CAAA,IAAA,IAAA;QACA,KAAA,QAAA,GAAA,IAAA,CAAA,IAAA;MACA,CAFA;IAGA,CALA;;IAMA,QAAA,GAAA;MACA,OAAA,CAAA,GAAA,CAAA,KAAA,MAAA,CAAA,IAAA;;MACA,IAAA,KAAA,MAAA,CAAA,KAAA,EAAA;QACA,KAAA,IAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA,EAAA,KAAA,EAAA,EAAA;UACA,KAAA,CAAA,GAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,IAAA,CAAA,IAAA,IAAA;YACA,KAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA;UACA,CAFA;QAGA;MACA;IACA,CAfA;;IAgBA,UAAA,GAAA;MACA,KAAA,CAAA,GAAA,CAAA,KAAA,MAAA,CAAA,OAAA,EAAA,IAAA,CAAA,IAAA,IAAA;QACA,KAAA,OAAA,GAAA,IAAA,CAAA,IAAA;MACA,CAFA;IAGA;;EApBA;AA7BA,CAAA","sourcesContent":["<template>\n<div class=\"loaction-wrapper\">\n  <h1 class=\"white-headline\"><b-icon-person-circle></b-icon-person-circle> {{ location.name }}</h1>\n  <div class=\"location-container\">\n    <div class=\"location-details\">\n      <h2 class=\"headline\">Infos</h2>\n      <hr>\n      <p>Climate: <strong>{{ loation.climate }}</strong></p>\n      <p>Terrain: <strong>{{ location.terrain }}</strong></p>\n      <p>Surface Water: <strong>{{ location.surface_water }}</strong></p>\n    </div>\n    <div class=\"loaction-details\">\n      <h2 class=\"headline\">Films</h2>\n      <hr>\n      <ul>\n        <li v-for=\"film in films\" :key=\"film.id\" class=\"list-item\">\n          <router-link :to='\"/film/\" + film.id' active-class=\"active\" class=\"white\">\n            {{ film.title }}\n          </router-link>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    name: 'Location',\n    data() {\n    return {\n      location: {},\n      films: [],\n      residents: {},\n    }\n    },\n    async created() {\n        let locationID = this.$route.params.id;\n\n        console.log(locationID);\n        await this.GetLocationData(locationID);\n        // this.GetFilms();\n    },\n    computed: {\n        filteredPeople() {\n            return this.people.filter(person => {\n                return person.name.toLowerCase().indexOf(this.searchName.toLowerCase()) > -1\n            })\n        }\n    },\n    watch: {\n        person() {\n            this.GetFilms();\n            this.GetSpecies();\n        }\n    },\n    methods: {\n      GetLocationData(locationID) {\n          axios.get(`https://ghibliapi.herokuapp.com/people/${locationID}`).then(resp => {\n              this.location = resp.data;\n          });\n      },\n      GetFilms() {\n        console.log(this.person.name);\n        if(this.person.films) {\n          for(let index = 0; index < this.person.films.length; index++) {\n              axios.get(this.person.films[index]).then(resp => {\n                  this.films.push(resp.data);\n              });\n          }\n        }\n      },\n      GetSpecies() {\n        axios.get(this.person.species).then(resp => {\n          this.species = resp.data;\n        });\n      }\n    }\n\n}\n</script>\n\n<style scoped lang=\"scss\">\na {\n  color: white;\n}\n\na:hover {\n  color: white;\n  font-weight: 600;\n}\n.location-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin: 20px 0;\n}\n\n.headline {\n  margin-bottom: 25px;\n}\n\n.location-details {\n  background-color: #5c5c5c;\n  border: 1px solid #737373;\n  border-radius: 15px;\n  color: white;\n  padding: 25px;\n  text-align: left;\n  width: 300px;\n  margin: auto;\n  -webkit-box-shadow: 10px 10px 25px -6px rgba(255,255,255,1);\n  -moz-box-shadow: 10px 10px 25px -6px rgba(255,255,255,1);\n  box-shadow: 10px 10px 25px -6px rgba(255,255,255,1);\n}\n\n.white {\n  color: white;\n}\n\n.white-headline {\n  color: white;\n  margin: 25px;\n}\n\n</style>"],"sourceRoot":"src/components"},"metadata":{},"sourceType":"module"}