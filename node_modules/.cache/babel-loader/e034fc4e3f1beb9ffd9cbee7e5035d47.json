{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  name: 'ArtworkDetail',\n\n  data() {\n    return {\n      film: {},\n      peoples: [],\n      species: [],\n      vehicles: [],\n      locations: []\n    };\n  },\n\n  created() {\n    let filmID = this.$route.params.id;\n    console.log(filmID);\n    this.getFilm(filmID);\n  },\n\n  watch: {\n    film() {\n      this.GetPeople();\n      this.GetSpecies();\n      this.GetVehicles();\n      this.GetLocations();\n    }\n\n  },\n  methods: {\n    getFilm(filmId) {\n      axios.get(`https://ghibliapi.herokuapp.com/films/${filmId}`).then(resp => {\n        this.film = resp.data;\n      });\n    },\n\n    GetPeople() {\n      for (let index = 0; index < this.film.people.length; index++) {\n        axios.get(this.film.people[index]).then(resp => {\n          this.peoples.push(resp.data);\n        });\n      }\n    },\n\n    GetSpecies() {\n      for (let index = 0; index < this.film.species.length; index++) {\n        axios.get(this.film.species[index]).then(resp => {\n          this.species.push(resp.data);\n        });\n      }\n    },\n\n    GetVehicles() {\n      if (this.film.vehicles[0] == 'https://ghibliapi.herokuapp.com/vehicles/') {\n        this.vehicles = [{\n          name: 'No vehicles'\n        }];\n      } else {\n        for (let index = 0; index < this.film.vehicles.length; index++) {\n          axios.get(this.film.vehicles[index]).then(resp => {\n            this.vehicles.push(resp.data);\n          });\n        }\n      }\n    },\n\n    GetLocations() {\n      for (let index = 0; index < this.film.locations.length; index++) {\n        axios.get(this.film.locations[index]).then(resp => {\n          this.locations.push(resp.data);\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"sources":["ArtworkDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;EACA,IAAA,EAAA,eADA;;EAEA,IAAA,GAAA;IACA,OAAA;MACA,IAAA,EAAA,EADA;MAEA,OAAA,EAAA,EAFA;MAGA,OAAA,EAAA,EAHA;MAIA,QAAA,EAAA,EAJA;MAKA,SAAA,EAAA;IALA,CAAA;EAOA,CAVA;;EAWA,OAAA,GAAA;IACA,IAAA,MAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;IAEA,OAAA,CAAA,GAAA,CAAA,MAAA;IACA,KAAA,OAAA,CAAA,MAAA;EACA,CAhBA;;EAiBA,KAAA,EAAA;IACA,IAAA,GAAA;MACA,KAAA,SAAA;MACA,KAAA,UAAA;MACA,KAAA,WAAA;MACA,KAAA,YAAA;IACA;;EANA,CAjBA;EAyBA,OAAA,EAAA;IACA,OAAA,CAAA,MAAA,EAAA;MACA,KAAA,CAAA,GAAA,CAAA,yCAAA,MAAA,EAAA,EAAA,IAAA,CAAA,IAAA,IAAA;QACA,KAAA,IAAA,GAAA,IAAA,CAAA,IAAA;MACA,CAFA;IAGA,CALA;;IAMA,SAAA,GAAA;MACA,KAAA,IAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,IAAA,CAAA,MAAA,CAAA,MAAA,EAAA,KAAA,EAAA,EAAA;QACA,KAAA,CAAA,GAAA,CAAA,KAAA,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,EAAA,IAAA,CAAA,IAAA,IAAA;UACA,KAAA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA;QACA,CAFA;MAIA;IACA,CAbA;;IAcA,UAAA,GAAA;MACA,KAAA,IAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,IAAA,CAAA,OAAA,CAAA,MAAA,EAAA,KAAA,EAAA,EAAA;QACA,KAAA,CAAA,GAAA,CAAA,KAAA,IAAA,CAAA,OAAA,CAAA,KAAA,CAAA,EAAA,IAAA,CAAA,IAAA,IAAA;UACA,KAAA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA;QACA,CAFA;MAIA;IACA,CArBA;;IAsBA,WAAA,GAAA;MACA,IAAA,KAAA,IAAA,CAAA,QAAA,CAAA,CAAA,KAAA,2CAAA,EAAA;QACA,KAAA,QAAA,GAAA,CAAA;UAAA,IAAA,EAAA;QAAA,CAAA,CAAA;MACA,CAFA,MAEA;QACA,KAAA,IAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,IAAA,CAAA,QAAA,CAAA,MAAA,EAAA,KAAA,EAAA,EAAA;UACA,KAAA,CAAA,GAAA,CAAA,KAAA,IAAA,CAAA,QAAA,CAAA,KAAA,CAAA,EAAA,IAAA,CAAA,IAAA,IAAA;YACA,KAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA;UACA,CAFA;QAIA;MACA;IACA,CAjCA;;IAkCA,YAAA,GAAA;MACA,KAAA,IAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,IAAA,CAAA,SAAA,CAAA,MAAA,EAAA,KAAA,EAAA,EAAA;QACA,KAAA,CAAA,GAAA,CAAA,KAAA,IAAA,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,IAAA,CAAA,IAAA,IAAA;UACA,KAAA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA;QACA,CAFA;MAIA;IACA;;EAzCA;AAzBA,CAAA","sourcesContent":["<template>\n  <div class=\"artwork-detials-wrapper\">\n    <h2 class=\"film-title\">{{ film.title }}</h2>\n    <h3 class=\"original-titels\">\n        {{ film.original_title }} ( {{ film.original_title_romanised }} )\n    </h3>\n\n    <img \n        class=\"film-image\" \n        :src=\"film.image\" \n        alt=\"\"\n    >\n    <p class=\"description\">{{ film.description }}</p>\n    <div class=\"film-info\">\n        <p><strong>Director(s):</strong> {{ film.director }}</p>\n        <p><strong>Producer(s):</strong> {{ film.producer }}</p>\n        <p><strong>Release Date: </strong> {{ film.release_date }}</p>\n        <p><b-icon-clock></b-icon-clock> {{ film.running_time }} min</p>\n        <p><strong>Rotten Tomatos: </strong> {{ film.rt_score }} <b-icon-award></b-icon-award></p>\n    </div>\n    <div class=\"objects\">\n        <b-dropdown variant=\"success\" text=\"People\" class=\"m-2\">\n            <b-dropdown-item \n                href=\"#\" \n                v-for=\"person in peoples\" \n                :key=\"person.id\"\n            >\n            <router-link :to='\"/person/\" + person.id' active-class=\"active\" class=\"black\">\n                {{ person.name }}\n            </router-link>\n            </b-dropdown-item>\n        </b-dropdown>\n\n        <b-dropdown variant=\"success\" text=\"species\" class=\"m-2\">\n            <b-dropdown-item \n                href=\"#\"\n                v-for=\"species in species\" \n                :key=\"species.id\"\n            >\n            <router-link :to='\"/species/\" + species.id' active-class=\"active\" class=\"black\">\n                {{ species.name }}\n            </router-link>\n            </b-dropdown-item>\n        </b-dropdown>\n\n        <b-dropdown variant=\"success\" text=\"vehicles\" class=\"m-2\">\n            <b-dropdown-item \n                href=\"#\"\n                v-for=\"vehicle in vehicles\" \n                :key=\"vehicle.id\"\n            >\n            <router-link :to='\"/vehicle/\" + vehicle.id' active-class=\"active\" class=\"black\">\n                {{ vehicle.name }}\n            </router-link>\n            </b-dropdown-item>\n        </b-dropdown>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n    name: 'ArtworkDetail',\n    data() {\n        return {\n            film: {},\n            peoples: [],\n            species: [],\n            vehicles: [],\n            locations: [],\n        }\n    },\n    created() {\n        let filmID = this.$route.params.id;\n\n        console.log(filmID);\n        this.getFilm(filmID);\n    },\n    watch: {\n        film() {\n            this.GetPeople();\n            this.GetSpecies();\n            this.GetVehicles();\n            this.GetLocations();\n        }\n    },\n    methods: {\n        getFilm(filmId) {\n            axios.get(`https://ghibliapi.herokuapp.com/films/${filmId}`).then(resp => {\n                this.film = resp.data;\n            });\n        },\n        GetPeople() {\n            for(let index = 0; index < this.film.people.length; index++) {\n                axios.get(this.film.people[index]).then(resp => {\n                    this.peoples.push(resp.data);\n                });\n                \n            }\n        },\n        GetSpecies() {\n            for(let index = 0; index < this.film.species.length; index++) {\n                axios.get(this.film.species[index]).then(resp => {\n                    this.species.push(resp.data);\n                });\n                \n            }\n        },\n        GetVehicles() {\n            if(this.film.vehicles[0] == 'https://ghibliapi.herokuapp.com/vehicles/'){\n                this.vehicles = [{name: 'No vehicles'}];\n            } else {\n                for(let index = 0; index < this.film.vehicles.length; index++) {\n                    axios.get(this.film.vehicles[index]).then(resp => {\n                        this.vehicles.push(resp.data);\n                    });\n                    \n                }\n            }\n        },\n        GetLocations() {\n            for(let index = 0; index < this.film.locations.length; index++) {\n                axios.get(this.film.locations[index]).then(resp => {\n                    this.locations.push(resp.data);\n                });\n                \n            }\n        },\n    }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.artwork-detials-wrapper {\n    margin: 50px 0;\n}\n\n.original-titels {\n    color: rgb(161, 242, 255);\n}\n\n.film-title {\n  color: white;\n}\n\n.black {\n    color: black;\n}\n\n.description {\n    color: white;\n    font-size: 21px;\n    margin: 2rem 40%;\n    text-align: left;\n}\n\n.film-info {\n    position: absolute;\n    left: 25px;\n    top: 50%;\n    background-color: #5c5c5c;\n    border: 1px solid #737373;\n    border-radius: 15px;\n    color: white;\n    padding: 25px;\n    text-align: left;\n}\n\n.film-image {\n    height: 400px;\n}\n\n</style>"],"sourceRoot":"src/components"},"metadata":{},"sourceType":"module"}