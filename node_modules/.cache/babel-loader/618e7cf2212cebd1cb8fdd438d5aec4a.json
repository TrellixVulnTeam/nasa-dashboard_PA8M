{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nexport default {\n  name: 'Register',\n  props: {},\n\n  data() {\n    return {\n      form: {\n        username: '',\n        full_name: '',\n        password: ''\n      },\n      type: 'password',\n      repeatPassword: '',\n      showError: false,\n      showPassword: false,\n      repeatCorrect: false\n    };\n  },\n\n  computed: {\n    usernameValidation() {\n      return this.form.username.length > 4 && this.form.username.length < 13;\n    },\n\n    passwordValidation() {\n      return this.form.password.length > 4;\n    },\n\n    passwordValidationNumbers() {\n      return /\\d/.test(this.form.password);\n    },\n\n    passwordSpecial() {\n      return /[!@#$%^&*)(+=._-]/.test(this.form.password);\n    },\n\n    password() {\n      return this.form.password;\n    }\n\n  },\n  watch: {\n    repeatPassword(val) {\n      if (val === this.form.password) {\n        return this.repeatCorrect = true;\n      } else {\n        return this.repeatCorrect = false;\n      }\n    },\n\n    password(val) {\n      if (val === this.repeatPassword) {\n        return this.repeatCorrect = true;\n      } else {\n        return this.repeatCorrect = false;\n      }\n    }\n\n  },\n  methods: { ...mapActions([\"Register\"]),\n\n    async submit() {\n      try {\n        await this.Register(this.form);\n        this.$router.push(\"/\");\n        this.showError = false;\n      } catch (error) {\n        this.showError = true;\n      }\n    },\n\n    togglePassword() {\n      if (this.showPassword) this.showPassword = false;else this.showPassword = true;\n      if (this.type === 'password') this.type = 'text';else if (this.type === 'text') this.type = 'password';\n    }\n\n  }\n};","map":{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;EACA,IAAA,EAAA,UADA;EAEA,KAAA,EAAA,EAFA;;EAIA,IAAA,GAAA;IACA,OAAA;MACA,IAAA,EAAA;QACA,QAAA,EAAA,EADA;QAEA,SAAA,EAAA,EAFA;QAGA,QAAA,EAAA;MAHA,CADA;MAMA,IAAA,EAAA,UANA;MAOA,cAAA,EAAA,EAPA;MAQA,SAAA,EAAA,KARA;MASA,YAAA,EAAA,KATA;MAUA,aAAA,EAAA;IAVA,CAAA;EAYA,CAjBA;;EAkBA,QAAA,EAAA;IACA,kBAAA,GAAA;MACA,OAAA,KAAA,IAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,IAAA,CAAA,QAAA,CAAA,MAAA,GAAA,EAAA;IACA,CAHA;;IAIA,kBAAA,GAAA;MACA,OAAA,KAAA,IAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA;IACA,CANA;;IAOA,yBAAA,GAAA;MACA,OAAA,KAAA,IAAA,CAAA,KAAA,IAAA,CAAA,QAAA,CAAA;IACA,CATA;;IAUA,eAAA,GAAA;MACA,OAAA,oBAAA,IAAA,CAAA,KAAA,IAAA,CAAA,QAAA,CAAA;IACA,CAZA;;IAaA,QAAA,GAAA;MACA,OAAA,KAAA,IAAA,CAAA,QAAA;IACA;;EAfA,CAlBA;EAmCA,KAAA,EAAA;IACA,cAAA,CAAA,GAAA,EAAA;MACA,IAAA,GAAA,KAAA,KAAA,IAAA,CAAA,QAAA,EAAA;QACA,OAAA,KAAA,aAAA,GAAA,IAAA;MACA,CAFA,MAEA;QACA,OAAA,KAAA,aAAA,GAAA,KAAA;MACA;IACA,CAPA;;IAQA,QAAA,CAAA,GAAA,EAAA;MACA,IAAA,GAAA,KAAA,KAAA,cAAA,EAAA;QACA,OAAA,KAAA,aAAA,GAAA,IAAA;MACA,CAFA,MAEA;QACA,OAAA,KAAA,aAAA,GAAA,KAAA;MACA;IACA;;EAdA,CAnCA;EAmDA,OAAA,EAAA,EACA,GAAA,UAAA,CAAA,CAAA,UAAA,CAAA,CADA;;IAEA,MAAA,MAAA,GAAA;MACA,IAAA;QACA,MAAA,KAAA,QAAA,CAAA,KAAA,IAAA,CAAA;QACA,KAAA,OAAA,CAAA,IAAA,CAAA,GAAA;QACA,KAAA,SAAA,GAAA,KAAA;MACA,CAJA,CAIA,OAAA,KAAA,EAAA;QACA,KAAA,SAAA,GAAA,IAAA;MACA;IACA,CAVA;;IAWA,cAAA,GAAA;MACA,IAAA,KAAA,YAAA,EAAA,KAAA,YAAA,GAAA,KAAA,CAAA,KACA,KAAA,YAAA,GAAA,IAAA;MAEA,IAAA,KAAA,IAAA,KAAA,UAAA,EAAA,KAAA,IAAA,GAAA,MAAA,CAAA,KACA,IAAA,KAAA,IAAA,KAAA,MAAA,EAAA,KAAA,IAAA,GAAA,UAAA;IACA;;EAjBA;AAnDA,CAAA","sourcesContent":["<template>\n    <div class=\"register\">\n      <div class=\"left-half\">\n        <h1>Welcome!</h1>\n        <h2>Register to continue</h2>\n      </div>\n      <div class=\"right-half\">\n        <p>Please register with your personal data.</p>\n            <div>\n              <label class=\"sr-only\" for=\"inline-form-input-username\">Username</label>\n              <b-form inline @submit.prevent=\"submit\">\n                  <b-form-input\n                    id=\"inline-form-input-name\"\n                    class=\"mb-2 mr-sm-2 mb-sm-0\"\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Username\"\n                    v-model=\"form.username\"\n                  >\n                  </b-form-input>\n                  <b-form-invalid-feedback :state=\"usernameValidation\">\n                    <b-icon icon=\"exclamation-triangle\"></b-icon> Your username must be 5-12 characters long.\n                  </b-form-invalid-feedback>\n                  <b-form-valid-feedback :state=\"usernameValidation\">\n                    <b-icon-check></b-icon-check>Looks Good.\n                  </b-form-valid-feedback>\n                  <label class=\"sr-only\" for=\"inline-form-input-full-name\">Full Name</label>\n                  <b-form-input \n                    type=\"text\" \n                    id=\"inline-form-input-full-name\" \n                    name=\"full_name\"\n                    placeholder=\"Full name\"\n                    v-model=\"form.full_name\"\n                    class=\"space-medium-bottom\"\n                  >\n                  </b-form-input>\n                  <label class=\"sr-only\" for=\"inline-form-input-password\">Password</label>\n                  <div @click=\"togglePassword\" class=\"eye-icon\">\n                    <b-icon-eye-fill v-if=\"showPassword\"></b-icon-eye-fill>\n                    <b-icon-eye-slash-fill v-if=\"!showPassword\"></b-icon-eye-slash-fill>\n                  </div>\n                  <b-form-input \n                    :type=\"this.type\" \n                    id=\"inline-form-input-password\" \n                    name=\"password\"\n                    placeholder=\"create a new password\"\n                    v-model=\"form.password\"\n                  >\n                  </b-form-input>\n                  <b-form-invalid-feedback :state=\"passwordValidation\">\n                    <b-icon icon=\"exclamation-triangle\"></b-icon>Your password must be 5-12 characters long.\n                  </b-form-invalid-feedback>\n                  <b-form-valid-feedback :state=\"passwordValidation\">\n                   <b-icon-check></b-icon-check> Looks Good.\n                  </b-form-valid-feedback>\n\n                  <b-form-invalid-feedback :state=\"passwordValidationNumbers\">\n                    <b-icon icon=\"exclamation-triangle\"></b-icon> Your password must contain numbers.\n                  </b-form-invalid-feedback>\n\n                  <b-form-invalid-feedback :state=\"passwordSpecial\">\n                    <b-icon icon=\"exclamation-triangle\"></b-icon>Your password must contain Special Characters.\n                  </b-form-invalid-feedback>\n\n                  <label class=\"sr-only\" for=\"inline-form-repeat-password\">Repeat password</label>\n                  <b-form-input \n                    type=\"password\" \n                    id=\"inline-form-repeat-password\" \n                    name=\"password\"\n                    placeholder=\"repeat your password\"\n                    v-model=\"repeatPassword\"\n                  >\n                  </b-form-input>\n                  \n\n                  <b-form-invalid-feedback :state=\"repeatCorrect\">\n                    <b-icon icon=\"exclamation-triangle\"></b-icon>Passwords must match.\n                  </b-form-invalid-feedback>\n\n                  <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n              </b-form>\n            </div>\n            <b-alert v-if=\"showError\" show variant=\"danger\">\n              <p class=\"error\">Username already exists</p>\n            </b-alert>\n      </div>\n    </div>\n</template>\n\n<script>\n  import { mapActions } from 'vuex';\n\nexport default {\n  name: 'Register',\n  props: {\n  }, \n  data() {\n    return {\n      form: {\n        username: '',\n        full_name: '',\n        password: '',\n      },\n      type: 'password',\n      repeatPassword: '',\n      showError: false,\n      showPassword: false,\n      repeatCorrect: false,\n    }\n  },\n  computed: {\n    usernameValidation() {\n      return this.form.username.length > 4 && this.form.username.length < 13\n    },\n    passwordValidation() {\n      return this.form.password.length > 4\n    },\n    passwordValidationNumbers() {\n      return /\\d/.test(this.form.password);\n    },\n    passwordSpecial() {\n      return /[!@#$%^&*)(+=._-]/.test(this.form.password);\n    },\n    password() {\n      return this.form.password;\n    }\n  },\n  watch: {\n    repeatPassword(val) {\n      if(val === this.form.password){\n        return this.repeatCorrect = true;\n      } else {\n        return this.repeatCorrect = false;\n      }\n    },\n    password(val) {\n      if(val === this.repeatPassword){\n        return this.repeatCorrect = true;\n      } else {\n        return this.repeatCorrect = false;\n      }\n    },\n  },\n  methods: {\n    ...mapActions([\"Register\"]),\n    async submit() {\n      try {\n        await this.Register(this.form);\n        this.$router.push(\"/\");\n        this.showError = false\n      } catch (error) {\n        this.showError = true\n      }\n    },\n    togglePassword() {\n      if(this.showPassword) this.showPassword = false;\n      else this.showPassword = true;\n\n      if(this.type === 'password') this.type = 'text';\n      else if(this.type === 'text') this.type = 'password';\n    },\n\n  }, \n}\n</script>\n\n\n<style scoped lang=\"scss\">\n  h1 {\n    color: black;\n  }\n  .navbar {\n    background: black;\n    color: white;\n  }\n  a {\n    color: white !important;\n  }\n  .nav-link {\n    color: white;\n    \n    &:hover {\n      color: white;\n    }\n  }\n  .register {\n      display: flex;\n      place-items: center;\n      margin: 3.5% 25% 10% 25%;\n      padding: 2.5% 5%;\n      border-radius: 25px;\n      border: 4px solid white;\n      background-color: white;\n      color: black;\n      overflow: hidden;\n  }\n\n  .left-half {\n    width: 50%;\n    margin-right: 2rem;\n  }\n\n  .right-half {\n    width: minmax(350px ,50%);\n    text-align: left;\n  }\n  b-input-group {\n    margin-top: 15px;\n  }\n  .login-button {\n    margin: 2rem;\n  }\n\n  .eye-icon {\n    margin: auto;\n    margin-left: 15px;\n    display: inline-block;\n    cursor: pointer;\n  }\n  button {\n    margin: 2rem 0;\n  }\n\n  .error {\n    margin: 0 !important;\n  }\n\n  label {\n    font-weight: 500;\n  }\n\n  input {\n    border-radius: 15px;\n  }\n\n  form {\n    width: 350px;\n  }\n</style>\n"],"sourceRoot":"src/components/user"},"metadata":{},"sourceType":"module"}